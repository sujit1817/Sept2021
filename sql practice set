create database prc;
use prc;

create table DEPT(
DEPTNO int,
DNAME varchar(15),
LOC varchar(10));

select * from DEPT;

insert into DEPT values
(10, 'ACCOUNTING', 'NEW YORK'),
(20, 'RESEARCH', 'DALLAS'),
(30, 'SALES', 'CHICAGO'),
(40, 'OPERATIONS', 'BOSTON');

Create table EMP(
EMPNO int,
ENAME varchar(10),
JOB varchar(9),
HIREDATE date,
SAL float,
COMM float,
DEPTNO int);

insert into EMP values
(7839, 'KING', 'MANAGER', '1991-11-17', 5000 ,NULL ,10),
('7698', 'BLAKE', 'CLERK', '1981-05-01', 2850 ,NULL ,30),
('7782', 'CLARK', 'MANAGER', '1981-06-09', 2450 ,NULL ,10),
('7566', 'JONES' ,'CLERK', '1981-04-02', 2975 ,NULL, 20),
('7654', 'MARTIN', 'SALESMAN', '1981-09-28', 1250, 1400, 30),
('7499', 'ALLEN', 'SALESMAN', '1981-02-20', 1600, 300, 30);

select * from emp;

/* 1. Find the names of all employees hired in the month of February (of
any year). */

select ename from EMP where month(hiredate)=2;
-- or
select ename from EMP where monthname(hiredate)='february';

/*
2. Find the names of all employees whose name ends with the letter
‘M’.*/

select ename from emp where ename like '%M';

/*
3. Display the ENAME and JOB for all employees who belong to the
same DEPTNO as employee ‘KING’.*/
select ename,job from emp where deptno=(select deptno from emp where ename='KING');

/*
4. Display the HRA for each employee given that HRA is 20% of
SAL.*/
select ename ,sal, (sal*0.2) as HRA from emp;

/*5. Display the JOB column with duplicate values suppressed.*/
select distinct(job) from emp;

/*6. Display the Enames and the corresponding Dnames. */
select e.ename, d.dname from emp e inner join dept d on e.deptno=d.deptno;

/*7. Display the employees in descending order of DEPTNO.*/
select * from emp order by deptno desc;

/*8. Find the names of all employees who do not receive any commission.*/
select ename from emp where comm is null;
select ename from emp where comm=null;
/*
9. Display the employee name and employee number of the
employees with the headings as NUMBER and NAME.*/
select empno as NUMBER, ename as NAME from emp;

/* 10.Find the name of the employee who is receiving the maximum
salary.*/
select * from emp;
select ename from emp where sal= (select max(sal) from emp);

/*11.Display the sum of SAL for all the employees belonging to
DEPTNO 10. */
select sum(sal) from emp where deptno=10;

/* 12.Display the rows where JOB column ends with the letter ‘T’.*/
select * from emp where job like '%T';

/*
1.Write a stored procedure to convert a temperature in Fahrenheit (F) to its
equivalent in Celsius (C). The required formula is:- C= (F-32)*5/9 Insert the
temperature in Centigrade into TEMPP table. Calling program for the stored
procedure need not be written.*/

create table temp(
far float(7,2),
celcius float(7,2)
);

select * from temp;
drop procedure abc;
delimiter //
create procedure abc(F float(7,2))
begin
declare C float(7,2);
set C= (F-32)*5/9;
insert into temp values(F,C);
end; //
delimiter ;

call abc(10);
/*
2. Write a stored function by the name of Num_cube. The stored function
should return the cube of a number ‘N’. The number ‘N’ should be passed to the
stored function as a parameter. Calling program for the stored function need not
be written.
*/

delimiter $$
create function Num_cube(N int) returns int deterministic
begin
declare ncube int default 0;
set ncube= N*N*N;
return ncube;
end $$
delimiter ;
select Num_cube(3);
commit;
